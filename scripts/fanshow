#!/usr/bin/python
"""
    Script to show fan status.
"""
from __future__ import print_function

import argparse

from tabulate import tabulate
from swsssdk import SonicV2Connector


header = ['FAN', 'Speed', 'Direction', 'Presence', 'Status', 'Timestamp']

FAN_TABLE_NAME = 'FAN_INFO'
SPEED_FIELD_NAME = 'speed'
DIRECTION_FIELD_NAME = 'direction'
PRESENCE_FIELD_NAME = 'presence'
STATUS_FIELD_NAME = 'status'
TIMESTAMP_FIELD_NAME = 'timestamp'


class FanShow(object):
    def __init__(self):
        self.db = SonicV2Connector(host="127.0.0.1")
        self.db.connect(self.db.STATE_DB)

    def show(self):
        keys = self.db.keys(self.db.STATE_DB, FAN_TABLE_NAME + '*')
        if not keys:
            print('Fan Not detected\n')
            return

        table = []
        for key in keys:
            key_list = key.split('|')
            if len(key_list) != 2: # error data in DB, log it and ignore
                print('Warn: Invalid key in table FAN_INFO: {}'.format(key))
                continue

            name = key_list[1]
            data_dict = self.db.get_all(self.db.STATE_DB, key)
            try:
                speed = float(data_dict[SPEED_FIELD_NAME])
                if speed > 100:
                    speed = '{}RPM'.format(int(speed))
                else:
                    speed = '{}%'.format(data_dict[SPEED_FIELD_NAME])
            except ValueError as e:
                print('Warn: cannot convert speed value from {}'.format(data_dict[SPEED_FIELD_NAME]))
                speed = data_dict[SPEED_FIELD_NAME]

            presence = data_dict[PRESENCE_FIELD_NAME].lower()
            presence = 'Present' if presence == 'true' else 'Not Present'
            status = data_dict[STATUS_FIELD_NAME].lower()
            status = 'OK' if status == 'true' else 'Not OK'

            table.append((name, speed, data_dict[DIRECTION_FIELD_NAME], presence, status, data_dict[TIMESTAMP_FIELD_NAME]))
        
        if table:
            table.sort()
            print(tabulate(table, header, tablefmt='simple', stralign='right'))
        else:
            print('No fan status data available\n')


if __name__ == "__main__":
    fanShow = FanShow()
    fanShow.show()
